<application><component name="ReplProjectCommandManager"><repl-command addToHistory="true" clearRepl="false" commandText="(do (clojure.core/require &apos;[scicloj.clay.v2.snippets])
    (scicloj.clay.v2.snippets/make-ns-html! &quot;~file-path&quot; {:ide :cursive}))
" copyResult="false" echo="MESSAGE" executeAfter="SYNC_ALL" executeBefore="SYNC_ALL" executionNs="REPL_CURRENT" executionType="EXPRESSION" insertIntoEditor="false" name="Clay Make File" printOutput="true" replLanguage="CLJ" replSelection="REPL_SELECTOR" replaceForm="false" saveAll="true" showResultInline="true" /><repl-command addToHistory="true" clearRepl="false" commandText="(do (clojure.core/require &apos;[scicloj.clay.v2.snippets])
    (scicloj.clay.v2.snippets/make-ns-quarto-html! &quot;~file-path&quot; {:ide :cursive}))
" copyResult="false" echo="MESSAGE" executeAfter="SYNC_ALL" executeBefore="SYNC_ALL" executionNs="REPL_CURRENT" executionType="EXPRESSION" insertIntoEditor="false" name="Clay Make File Quarto" printOutput="true" replLanguage="CLJ" replSelection="REPL_SELECTOR" replaceForm="false" saveAll="true" showResultInline="true" /><repl-command addToHistory="true" clearRepl="false" commandText="(do (clojure.core/require &apos;[scicloj.clay.v2.snippets])
    (scicloj.clay.v2.snippets/make-ns-quarto-revealjs! &quot;~file-path&quot; {:ide :cursive}))
" copyResult="false" echo="MESSAGE" executeAfter="SYNC_ALL" executeBefore="SYNC_ALL" executionNs="REPL_CURRENT" executionType="EXPRESSION" insertIntoEditor="false" name="Clay Make File RevealJS" printOutput="true" replLanguage="CLJ" replSelection="REPL_SELECTOR" replaceForm="false" saveAll="true" showResultInline="true" /><repl-command addToHistory="true" clearRepl="false" commandText="(do (clojure.core/require &apos;[scicloj.clay.v2.snippets])
    (scicloj.clay.v2.snippets/make-form-html! (quote ~form-before-caret) &quot;~file-path&quot; {:ide :cursive}))
" copyResult="false" echo="MESSAGE" executeAfter="SYNC_ALL" executeBefore="SYNC_ALL" executionNs="REPL_CURRENT" executionType="EXPRESSION" insertIntoEditor="false" name="Clay Make Current Form" printOutput="true" replLanguage="CLJ" replSelection="REPL_SELECTOR" replaceForm="false" saveAll="true" showResultInline="true" /><repl-command addToHistory="true" clearRepl="false" commandText="(do (clojure.core/require &apos;[scicloj.clay.v2.snippets])
    (scicloj.clay.v2.snippets/make-form-quarto-html! (quote ~form-before-caret) &quot;~file-path&quot; {:ide :cursive}))
" copyResult="false" echo="MESSAGE" executeAfter="SYNC_ALL" executeBefore="SYNC_ALL" executionNs="REPL_CURRENT" executionType="EXPRESSION" insertIntoEditor="false" name="Clay Make Current Form Quarto" printOutput="true" replLanguage="CLJ" replSelection="REPL_SELECTOR" replaceForm="false" saveAll="true" showResultInline="true" /><repl-command addToHistory="true" clearRepl="false" commandText="(do (clojure.core/require &apos;[scicloj.clay.v2.snippets])
    (scicloj.clay.v2.snippets/make-form-html! (quote ~top-level-form) &quot;~file-path&quot; {:ide :cursive}))
" copyResult="false" echo="MESSAGE" executeAfter="SYNC_ALL" executeBefore="SYNC_ALL" executionNs="REPL_CURRENT" executionType="EXPRESSION" insertIntoEditor="false" name="Clay Make Top Level Form" printOutput="true" replLanguage="CLJ" replSelection="REPL_SELECTOR" replaceForm="false" saveAll="true" showResultInline="true" /><repl-command addToHistory="true" clearRepl="false" commandText="(do (clojure.core/require &apos;[scicloj.clay.v2.snippets])
    (scicloj.clay.v2.snippets/make-form-quarto-html! (quote ~top-level-form) &quot;~file-path&quot; {:ide :cursive}))
" copyResult="false" echo="MESSAGE" executeAfter="SYNC_ALL" executeBefore="SYNC_ALL" executionNs="REPL_CURRENT" executionType="EXPRESSION" insertIntoEditor="false" name="Clay Make Top Level Form Quarto" printOutput="true" replLanguage="CLJ" replSelection="REPL_SELECTOR" replaceForm="false" saveAll="true" showResultInline="true" /><repl-command addToHistory="true" clearRepl="false" commandText="(do (clojure.core/require &apos;[scicloj.clay.v2.snippets])
    (scicloj.clay.v2.snippets/browse!))
" copyResult="false" echo="MESSAGE" executeAfter="SYNC_ALL" executeBefore="SYNC_ALL" executionNs="REPL_CURRENT" executionType="EXPRESSION" insertIntoEditor="false" name="Clay Browse" printOutput="true" replLanguage="CLJ" replSelection="REPL_SELECTOR" replaceForm="false" saveAll="true" showResultInline="true" /><repl-command addToHistory="true" clearRepl="false" commandText="(do (clojure.core/require &apos;[scicloj.clay.v2.snippets])
    (scicloj.clay.v2.snippets/watch! {:ide :cursive}))
" copyResult="false" echo="MESSAGE" executeAfter="SYNC_ALL" executeBefore="SYNC_ALL" executionNs="REPL_CURRENT" executionType="EXPRESSION" insertIntoEditor="false" name="Clay Watch" printOutput="true" replLanguage="CLJ" replSelection="REPL_SELECTOR" replaceForm="false" saveAll="true" showResultInline="true" /></component></application>